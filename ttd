

//Elearning 


package com.app.TTD.demo;


import java.util.HaskMap;
import java.util.Map;


public class Elearning{

  private Map<string,Integer>getcourse(){
    Map<String,Integer>getcourse=new HashMap<>();
    Map<String,Integer>course1=null;
    course1.put("Selenium",10);
    Map<String,Integer>course2=null;
    course2.put("Junit",25);
    Map<String,Integer>course3=null;
    course3.put("Git",2);
    return getcourse;
}

public int getcourse(String Topic){


  Map<String,Integer>courseMap=null;
  int count=0;
  if(Topic.isEmpty()){
    throw new NullPointerException("Topic Name cannot be empty..");

}

courseMap=getcourse();

if(!courseMap.containsKey(Topic)){
throw new NullPointerException("Topic name does not exist");
}else{
  count=courseMap.get(Topic);
}
return count;
}


//Test Elearning 

package com.app.TDD.demo;
import org.testng.Assert;
import org.testng.annotations.Test;

public class TestElearning{

@Test

public void findcourse(){

String Topic="selenium";
int Expectduration=10;


Elearning cs=new Elearning();


//number of people in the city 


int count=cs.getcourse(Topic);


System.out.println(count);


Assert.assertEquals(count,Expectedduration);
}

@Test

public void findEmptyInput(){



try{

String Topic="";
int Expectedduration=0;
Elearnind cs=new Elearning();
int count=cs.getcourse(Topic);
}catch(NullPointerException e)
{

System.out.println("Topic name cannot be empty");
}
}
}

